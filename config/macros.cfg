#####################################################################
#	Macros
#####################################################################


# Conditional G28
[gcode_macro CG28]
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}

[gcode_macro RESET_EXTRUDER]
gcode:
    G92 E0 ; reset extruder  

[gcode_macro PURGE_LINE]
gcode:
    white
    { action_respond_info("Purging...") }
    M117 Prime Line
    G1 X100 E25 F1000                   ; Extrude filament 25mm (how much it retracted in PRINT_END).
    G92 E0;
    G90
    G0 X50 Y4 F6000                     ; Go to X3 Y3
    G1 Z0.2 F200                        ; Set nozzle height
    G91
    G1 X150 E30 F1200;                  ; intro line
    G1 Y1                               ; move Y 1
    G1 X-150 E30 F1200;                 ; intro line
    G92 E0.0                            ; reset extrusion distance
    G1 Z1 F5000                         ; Lift Z   

[gcode_macro MATERIAL_PA]
gcode:
    {% set MATERIAL = params.MATERIAL|default("XXX")|string %}

    {% if MATERIAL == "PLA" %}
        SET_PRESSURE_ADVANCE ADVANCE=0.0714
    {% elif MATERIAL == "PET" %}
        SET_PRESSURE_ADVANCE ADVANCE=0.0650
        SET_GCODE_OFFSET Z_ADJUST=0.010 MOVE=1
    {% elif MATERIAL == "ABS" %}
        SET_PRESSURE_ADVANCE ADVANCE=0.060
        SET_GCODE_OFFSET Z=0.0
        SET_GCODE_OFFSET Z_ADJUST=-0.030
    {% endif %}    

[gcode_macro PRINT_START]
# Use PRINT_START for the slicer starting script - please customise for your slicer of choice
# Start GCODE should be for Prusa Slicer or SuperSlicer: print_start EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature]
# Start GCODE should be for Cura: print_start EXTRUDER_TEMP=[material_print_temperature] BED_TEMP=[material_bed_temperature]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(205)|float %}  
    {% set FILAMENT = params.FILAMENT|default(PLA) %}
    {% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}  # Get bounding box of the first layer

    LIGHTS_ON 

    {% if not 'xyz' in printer.toolhead.homed_axes %}
        green
        M117 Homing
        G28
    {% endif %}
    
    red
    M117 Heating Bed
    M140 S{BED_TEMP}                    ; set bed final temp
    M190 S{BED_TEMP}                    ; wait for bed final temp

    orange 
    M117 Heating Extruder   
    M104 S{EXTRUDER_TEMP}               ; set extruder final temp
    M109 S{EXTRUDER_TEMP}               ; wait for extruder final temp

    {% if FILAMENT == 'ABS' or FILAMENT == 'ASA' %}
        purple
        M117 Heat soaking 
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}
    {% endif %}

    #{% if not printer.quad_gantry_level.applied %}
        green
        M117 QGL thingy
        QUAD_GANTRY_LEVEL
    #{% endif %}     

    M117 Cleaning Nozzle
    CLEAN_NOZZLE

    Attach_probe_lock
    yellow
    M117 Calibrating Z Offset
    CALIBRATE_Z

    {% if FL_SIZE != "0_0_0_0" %}
        #M117 Computing bed mesh
        #COMPUTE_MESH_PARAMETERS SIZE={FL_SIZE}
        #M117 Calibrating Bed Mesh
        #ADAPTIVE_BED_MESH
    {% else %}
        #M117 Calibrating Bed Mesh
        #BED_MESH_CALIBRATE
    {% endif %}   
    Dock_Probe_Unlock
    
    #MATERIAL_PA MATERIAL={FILAMENT}

    white
    PURGE_LINE

    LIGHTS_ON_20
    blue

    {% if FILAMENT == 'ABS' or FILAMENT == 'ASA' %}
    #    NEVERMORE_START_PRINT
    {% endif %}

    M117 Printing...


[gcode_macro PRINT_START_NOZ]
# Use PRINT_START for the slicer starting script - please customise for your slicer of choice
# Start GCODE should be for Prusa Slicer or SuperSlicer: print_start EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature]
# Start GCODE should be for Cura: print_start EXTRUDER_TEMP=[material_print_temperature] BED_TEMP=[material_bed_temperature]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(205)|float %}  
    {% set FILAMENT = params.FILAMENT|default(PLA) %}
    {% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(45)|int %}
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}  # Get bounding box of the first layer

    LIGHTS_ON 

    {% if not 'xyz' in printer.toolhead.homed_axes %}
        green
        M117 Homing
        G28
    {% endif %}
    
    red
    M117 Heating Bed
    M140 S{BED_TEMP}                    ; set bed final temp
    M190 S{BED_TEMP}                    ; wait for bed final temp

    orange 
    M117 Heating Extruder   
    M104 S{EXTRUDER_TEMP}               ; set extruder final temp
    M109 S{EXTRUDER_TEMP}               ; wait for extruder final temp

    {% if FILAMENT == 'ABS' or FILAMENT == 'ASA' %}
        purple
        M117 Heat soaking 
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={ENCLOSURE_TEMP}
    {% endif %}

    #{% if not printer.quad_gantry_level.applied %}
        green
        M117 QGL thingy
        QUAD_GANTRY_LEVEL
    #{% endif %}     

    M117 Cleaning Nozzle
    CLEAN_NOZZLE

    #Attach_probe_lock
    #yellow
    #M117 Calibrating Z Offset
    #CALIBRATE_Z

    {% if FL_SIZE != "0_0_0_0" %}
        #M117 Computing bed mesh
        #COMPUTE_MESH_PARAMETERS SIZE={FL_SIZE}
        #M117 Calibrating Bed Mesh
        #ADAPTIVE_BED_MESH
    {% else %}
        #M117 Calibrating Bed Mesh
        #BED_MESH_CALIBRATE
    {% endif %}   
    #Dock_Probe_Unlock
    
    #MATERIAL_PA MATERIAL={FILAMENT}

    white
    PURGE_LINE

    LIGHTS_ON_20
    blue

    {% if FILAMENT == 'ABS' or FILAMENT == 'ASA' %}
    #    NEVERMORE_START_PRINT
    {% endif %}

    M117 Printing...


[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X150 Y150 Z30 F3600

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    {% set FILAMENT = params.FILAMENT|default(PLA) %}  
    
    #   Check end position to determine safe directions to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    #G1 E-8.0 F3600                 ; retract filament
    G1 E-25.0 F1800                 ; retract filament
    G91                            ; relative positioning
    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing

    TURN_OFF_HEATERS
    M107                             ; turn off fan
    G1 Z2 F3000                      ; move nozzle up 2mm
    G90                              ; absolute positioning
    G0 X{max_x / 2} Y{max_y} F3600   ; park nozzle at rear
    #BED_MESH_CLEAR

    {% if FILAMENT == 'ABS' or params.FILAMENT == 'ASA' %}
        NEVERMORE_END_PRINT
    {% endif %}

    M117 Print Complete
    
    
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  PRINT_END
  BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME

[gcode_macro Park_Toolhead]
gcode:
   G90
   G1 X125 Y125 F18000  

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1

[gcode_macro PREHEAT_ABS]
gcode:
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=240
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110

[gcode_macro PREHEAT_PLA]
gcode:
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=205
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60    
    
[gcode_macro DO_PRESSURE_ADVANCE]
gcode:
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
    TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.005          

#[gcode_macro UNLOAD_FILAMENT]
#gcode:
#    SAVE_GCODE_STATE NAME=UNLOADFILAMENT
#    M83                                     ; set extruder to relative
#    G1 E1 F300                              ; (CAUSING CLOGS AT 10mm?) extrude a little to soften tip 
#    G1 E-100 F1800                          ; retract filament completely
#    RESTORE_GCODE_STATE NAME=UNLOADFILAMENT 

[gcode_macro UNLOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT
    M83             ; Relative extrusion
    G1 E-5 F300     ; Retract 5mm slowly
    G1 E4.5 F1200   ; Dip to remove string
    G1 E-100 F1200   ; Fast full retract
    RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=LOAD_FILAMENT
    M83             ; Relative extrusion
    G1 E100 F300    ; Fast full extrude
    RESTORE_GCODE_STATE NAME=LOAD_FILAMENT    

[gcode_macro SPEEDTEST]
gcode:
    {% set fmin = params.FMIN|default(300)|float * 60 %}
    {% set fmax = params.FMAX|default(400)|float * 60 %}
    {% set steps = params.STEPS|default(3)|int %}
    {% set cycles = params.CYCLES|default(1)|int %}

    {% set inset = 20.0|float %}
    {% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}
    {% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}
    {% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}
    {% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}
    
    SAVE_GCODE_STATE NAME=speedtest_state
    G90
        {% for INTERVAL in range(steps) %}
            {% for REPEAT in range(cycles) %}
                {% if fmin == fmax %}
                    {% set feedrate = fmin %}
                {% else %}
                    {% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}
                {% endif %}
                M400 # Wait for queue to empty
                M117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}
                G1 F{feedrate} # set feedrate for the round
                G1 X{minX} Y{minY} # front left
                G1 X{minX} Y{minY + (maxY-minY)/2} # mid left
                G1 X{maxX} Y{minY + (maxY-minY)/2} # mid right
                G1 X{minX} Y{minY + (maxY-minY)/2} # mid left
                G1 X{minX} Y{minY} # front left
                G1 X{maxX} Y{maxY} # back right
                G1 X{maxX} Y{minY} # front right
                G1 X{minX} Y{maxY} # back left
            {% endfor %}
        {% endfor %}
    M117
    park_toolhead
    RESTORE_GCODE_STATE NAME=speedtest_state     

[gcode_macro RETRACTION_UP]
gcode:
    {% set CRLEN = printer.firmware_retraction.retract_length|float %}
    {% set NRLEN = CRLEN|float + 0.1 %}
    { action_respond_info("current retract_length %.2f, new retract_length %.2f" % (CRLEN, NRLEN))  }
    SET_RETRACTION RETRACT_LENGTH={NRLEN}    

[gcode_macro RETRACTION_DOWN]
gcode:
    {% set CRLEN = printer.firmware_retraction.retract_length|float %}
    {% set NRLEN = CRLEN|float - 0.1 %}
    { action_respond_info("current retract_length %.2f, new retract_length %.2f" % (CRLEN, NRLEN))  }
    SET_RETRACTION RETRACT_LENGTH={NRLEN}    

[gcode_macro SPEEDTEST2]
gcode:
    {% set fmin = params.FMIN|default(300)|float * 60 %}
    {% set fmax = params.FMAX|default(400)|float * 60 %}
    {% set steps = params.STEPS|default(3)|int %}
    {% set cycles = params.CYCLES|default(1)|int %}

    {% set inset = 20.0|float %}
    {% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}
    {% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}
    {% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}
    {% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}
    
    SAVE_GCODE_STATE NAME=speedtest_state
    G90
        {% for INTERVAL in range(steps) %}
            {% for REPEAT in range(cycles) %}
                {% if fmin == fmax %}
                    {% set feedrate = fmin %}
                {% else %}
                    {% set feedrate = fmin + ( (fmax - fmin) / (steps -1) ) * INTERVAL %}
                {% endif %}
                M400 # Wait for queue to empty
                M117 {INTERVAL+1}/{steps} {"%4.0f mm/s" % (feedrate/60)}
                G1 F{feedrate} # set feedrate for the round
                G1 X{minX} Y{minY} # front left
                G1 X{maxX} Y{minY} # front right
                G1 X{maxX} Y{maxY} # back right
                G1 X{minX} Y{maxY} # back left
            {% endfor %}
        {% endfor %}
    M117
    park_toolhead
    RESTORE_GCODE_STATE NAME=speedtest_state      

[gcode_macro M600]
gcode:
 PAUSE
 G91
 G1 E-.8 F2700
 G1 Z30
 G90
 G1 X175 Y10 F3000    

[gcode_macro UNLOAD_FILAMENT_HARTK]
gcode:
    {% set TEMP = params.TEMP|default(230)|float %}
    {% set DISTANCE = params.DISTANCE|default(105)|float %}

    M400
	SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state
	_LOW_TEMP_CHECK T={TEMP}
    M82
    ; Filament tip shaping sequence
    G92 E0
    G1 E2 F3600
    G1 E0 F3600
    G1 E3 F3600
    G1 E0 F3600
    G1 E4 F3600
    G1 E0 F3600

    M83
    G1 E-20 F3600
    G4 P3000
    G1 E{DISTANCE|float * -1} F3000
	RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state

[gcode_macro LOAD_FILAMENT_HARTK]
gcode:
    {% set TEMP = params.TEMP|default(230)|float %}
    {% set DISTANCE = params.DISTANCE|default(105)|float %}

	M400
	SAVE_GCODE_STATE NAME=LOAD_FILAMENT_state
	_LOW_TEMP_CHECK T={TEMP}
    M83
	G92 E0
    G1 E{DISTANCE|float} F200

    {% if 'xyz' in printer.toolhead.homed_axes %}
        PURGE TEMP={TEMP} DISTANCE=50
    {% else %}
        G1 E50 F150
    {% endif %}
    
	G92 E0
    RESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state